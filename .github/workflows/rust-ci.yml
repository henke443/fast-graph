name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [1.64.0, stable]
        features: []
    steps:
      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@master
      - name: Run tests
      run: cargo test --verbose
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust: [1.64.0, stable]
    steps:
      - name: Tests
      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@master
      - name: Build
        run: |
          cargo build --verbose --no-default-features
          cargo build --verbose --features "${{ matrix.features }}"
        run: |
          cargo test --verbose --no-default-features
          cargo test ${{ matrix.test_all }} --verbose --features "${{ matrix.features }}"
      # - name: Build benchmarks
      #   if: ${{ matrix.bench }}
      #   run: |
      #     cargo bench --verbose --no-run --all-features
  
  rustfmt:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        include:
          - rust: stable
            rustfmt: rustfmt
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: ${{ matrix.rustfmt }}
          override: true
      - name: Rustfmt
        if: matrix.rustfmt
        run: cargo fmt -- --check
